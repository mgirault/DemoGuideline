'use strict';

// all available html tags
const tagRegex = /<(\w+)(?:\s+([\w-]+(?:\s*=\s*(?:".*?"|'.*?'|[\^'">\s]+))?)+\s*|\s*)\/?>/g;
const classRegex = /class="([^"]+)"/g;

/**
 * Convert html tags to contain a css modules class variable
 * @description showdown js custom extension - https://github.com/showdownjs/showdown
 * @tutorial https://github.com/showdownjs/showdown/wiki/extensions#filter-property
 * @returns {Array} - modified html tag
 */

let classy = () => {
  return [{
    type: 'output', // output extensions (or modifiers) alter the HTML output generated by showdown
    filter: (text) => { // filter property should be a function that acts as a callback
      return text.replace(tagRegex, (element, tag, attributes) => {
        const klasses = classRegex.exec(element);
        const isSelfClosing = element.match(/\/>/);

        if (klasses) {
          // If element has existing classes just add the new one
          element = element.replace(classRegex, `class="${klasses[1]} {$ styles.${tag} $}"`);
        } else {
          if (attributes) {
            element = `<${tag} class="{$ styles.${tag} $}" ${attributes}` + (isSelfClosing ? '/>' : '>'); // handle self closing elements
          } else {
            element = `<${tag} class="{$ styles.${tag} $}"` + (isSelfClosing ? '/>' : '>'); // handle self closing elements
          }
        }

        return element;
      });
    }
  }];
};

module.exports = classy;
